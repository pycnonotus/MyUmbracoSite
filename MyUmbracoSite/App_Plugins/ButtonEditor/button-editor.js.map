{"version":3,"file":"button-editor.js","sources":["../../ButtonEditor/src/my-element.ts"],"sourcesContent":["import { LitElement, html, css, customElement, property } from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbPropertyEditorUiElement } from \"@umbraco-cms/backoffice/property-editor\";\n// Explicitly import the content picker so that the custom element is registered:\n\n@customElement('my-suggestions-property-editor-ui')\nexport default class MySuggestionsPropertyEditorUIElement extends LitElement implements UmbPropertyEditorUiElement {\n  @property({ type: Boolean })\n  public addButton = false;\n\n  @property({ type: String })\n  public buttonText = \"\";\n\n  // For a single content item, we'll store it as an object (or null if none selected)\n  @property({ type: Object })\n  public selectedContentItem: any = null;\n\n  render() {\n    return html`\n      <!-- Checkbox: Ask if a button should be added -->\n      <uui-checkbox \n        id=\"add-button-checkbox\" \n        label=\"Add Button?\" \n        .checked=${this.addButton}\n        @change=${this._onAddButtonChanged}>\n      </uui-checkbox>\n\n      <!-- Conditionally show the text input and content picker -->\n      ${this.addButton ? html`\n        <br />\n        <label>Button Text</label>\n        <uui-input \n          id=\"button-text\" \n          label=\"Button Text\" \n          .value=${this.buttonText}\n          @input=${this._onButtonTextInput}>\n        </uui-input>\n        <label>Content Picker</label>\n\n<umb-control-group label=\"Parent Node ID\" description=\"Where the child nodes will be added\">\n    <input type=\"text\" class=\"umb-editor umb-textstring\" ng-model=\"rootNodeId\" required />\n</umb-control-group>\n<umb-date-time-picker> </<umb-date-time-picker>\n\n        <umb-content-picker\n          id=\"content-picker\"\n          label=\"Select Content\"\n          single-selection\n          .selectedItem=${this.selectedContentItem}\n          @change=${this._onContentPickerChange}>\n        </umb-content-picker>\n      ` : \"\"}\n    `;\n  }\n\n  static styles = [\n    css`\n      :host {\n        display: block;\n        margin: 10px;\n      }\n  \n    `\n  ];\n\n  private _onAddButtonChanged(e: Event) {\n    const target = e.target as HTMLInputElement;\n    this.addButton = target.checked;\n    if (!this.addButton) {\n      // Clear the additional fields when unchecked.\n      this.buttonText = \"\";\n      this.selectedContentItem = null;\n    }\n  }\n\n  private _onButtonTextInput(e: InputEvent) {\n    this.buttonText = (e.target as HTMLInputElement).value;\n  }\n\n  private _onContentPickerChange(e: CustomEvent) {\n    // Assuming the content picker fires an event with a single selected item in e.detail.selectedItem\n    this.selectedContentItem = e.detail.selectedItem;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-suggestions-property-editor-ui': MySuggestionsPropertyEditorUIElement;\n  }\n}\n"],"names":["MySuggestionsPropertyEditorUIElement","LitElement","html","e","target","css","__decorateClass","property","customElement"],"mappings":";;;;;;AAKqB,IAAAA,IAArB,cAAkEC,EAAiD;AAAA,EAAnH,cAAA;AAAA,UAAA,GAAA,SAAA,GAEE,KAAO,YAAY,IAGnB,KAAO,aAAa,IAIpB,KAAO,sBAA2B;AAAA,EAAA;AAAA,EAElC,SAAS;AACA,WAAAC;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKQ,KAAK,SAAS;AAAA,kBACf,KAAK,mBAAmB;AAAA;AAAA;AAAA;AAAA,QAIlC,KAAK,YAAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMN,KAAK,UAAU;AAAA,mBACf,KAAK,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAahB,KAAK,mBAAmB;AAAA,oBAC9B,KAAK,sBAAsB;AAAA;AAAA,UAErC,EAAE;AAAA;AAAA,EAAA;AAAA,EAcF,oBAAoBC,GAAU;AACpC,UAAMC,IAASD,EAAE;AACjB,SAAK,YAAYC,EAAO,SACnB,KAAK,cAER,KAAK,aAAa,IAClB,KAAK,sBAAsB;AAAA,EAC7B;AAAA,EAGM,mBAAmBD,GAAe;AACnC,SAAA,aAAcA,EAAE,OAA4B;AAAA,EAAA;AAAA,EAG3C,uBAAuBA,GAAgB;AAExC,SAAA,sBAAsBA,EAAE,OAAO;AAAA,EAAA;AAExC;AA7EqBH,EAiDZ,SAAS;AAAA,EACdK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOF;AAvDOC,EAAA;AAAA,EADNC,EAAS,EAAE,MAAM,QAAS,CAAA;AAAA,GADRP,EAEZ,WAAA,aAAA,CAAA;AAGAM,EAAA;AAAA,EADNC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GAJPP,EAKZ,WAAA,cAAA,CAAA;AAIAM,EAAA;AAAA,EADNC,EAAS,EAAE,MAAM,OAAQ,CAAA;AAAA,GARPP,EASZ,WAAA,uBAAA,CAAA;AATYA,IAArBM,EAAA;AAAA,EADCE,EAAc,mCAAmC;AAAA,GAC7BR,CAAA;"}